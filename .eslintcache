[{"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/index.js":"1","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/App.js":"2","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/reportWebVitals.js":"3","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/index.js":"4","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/type.js":"5","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/cart/Cart.js":"6","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/loginForm/LoginForm.js":"7","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/navbar/Navbar.js":"8","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/signupForm/SignupForm.js":"9","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/home/Home.js":"10","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/inventory/Inventory.js":"11","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/products/Products.js":"12","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/dashboard/Dashboard.js":"13","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/api/index.js":"14","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/App.js":"15","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/Orders.js":"16","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/Products.js":"17","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/orderItem/OrderItem.js":"18","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/hooks/useFormFields.js":"19","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/homepageHeading/HomepageHeading.js":"20","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/productForm/ProductForm.js":"21","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/cardProduct/CardProduct.js":"22"},{"size":708,"mtime":1611167820753,"results":"23","hashOfConfig":"24"},{"size":4833,"mtime":1611875213500,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611167481727,"results":"26","hashOfConfig":"24"},{"size":275,"mtime":1611167781032,"results":"27","hashOfConfig":"24"},{"size":695,"mtime":1612050836874,"results":"28","hashOfConfig":"24"},{"size":2866,"mtime":1611887364818,"results":"29","hashOfConfig":"24"},{"size":2857,"mtime":1611293647856,"results":"30","hashOfConfig":"24"},{"size":3228,"mtime":1611249053126,"results":"31","hashOfConfig":"24"},{"size":3466,"mtime":1611167764484,"results":"32","hashOfConfig":"24"},{"size":1185,"mtime":1611167708921,"results":"33","hashOfConfig":"24"},{"size":5233,"mtime":1612061236564,"results":"34","hashOfConfig":"24"},{"size":2217,"mtime":1611869185946,"results":"35","hashOfConfig":"24"},{"size":1188,"mtime":1611167702322,"results":"36","hashOfConfig":"24"},{"size":3335,"mtime":1612045591487,"results":"37","hashOfConfig":"24"},{"size":498,"mtime":1611167781029,"results":"38","hashOfConfig":"24"},{"size":1136,"mtime":1611881314760,"results":"39","hashOfConfig":"24"},{"size":1389,"mtime":1612061553213,"results":"40","hashOfConfig":"24"},{"size":4563,"mtime":1611882064583,"results":"41","hashOfConfig":"24"},{"size":273,"mtime":1611167773661,"results":"42","hashOfConfig":"24"},{"size":1062,"mtime":1611167714757,"results":"43","hashOfConfig":"24"},{"size":3095,"mtime":1612061509464,"results":"44","hashOfConfig":"24"},{"size":5503,"mtime":1611963792694,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"w1pyoh",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/index.js",[],["95","96"],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/App.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/reportWebVitals.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/index.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/type.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/cart/Cart.js",["97","98"],"import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Grid, Divider, Button } from 'semantic-ui-react';\nimport { SET_BANNER, SET_ORDERS, UPDATE_TOTAL_ORDER } from '../../store/type';\nimport OrderItem from '../orderItem/OrderItem';\nimport { placeOrder } from '../../api';\n\nimport './Styles.scss';\n\nconst Cart = ({ history, handleBanner }) => {\n  \n  let cartBody;\n  const products = useSelector(state => state.product.products);\n  const orders = useSelector(state => state.order.orders);\n  const totalOrder = useSelector(state => state.order.totalOrder);\n  const currentUser = useSelector(state => state.app.currentUser);\n\n  const [ emptyCart, setEmptyCart ] = useState(false)\n  const dispatch = useDispatch()\n  \n  useEffect(() => {\n    setEmptyCart(orders.length === 0)\n  }, [emptyCart, orders.length])\n\n\n  const collectOrders = () => {\n    return orders.map(order => order.id)\n  }\n\n  const isSoldOut = product => {\n    return product.quantity === 0\n  }\n\n  const checkProductQuantity = quantity => {\n    let options = [];\n    for (let qty = 1; qty <= quantity; qty++) {\n      options.push({ key: qty, text: qty.toString(), value: qty });\n    }\n    return options;\n  }\n\n  const handlePlaceOrder = () => {\n    placeOrder()\n    .then(r => r.json())\n    .then(data => {\n      handleBanner()\n      const { confirmation } = data\n      if (data.error) {\n        dispatch({ type: SET_BANNER, payload: confirmation })\n      } else {\n        dispatch({ type: SET_ORDERS, payload: [] })\n        dispatch({ type: UPDATE_TOTAL_ORDER, payload: 0 })\n        dispatch({ type: SET_BANNER, payload: confirmation })\n      }\n      history.push('/dashboard')\n    })\n  }\n\n  const displayOrders = () => {\n    return orders.map(orderProduct => (\n      <Grid.Column key={`${orderProduct.id}`}>\n        <OrderItem \n          orderProduct={orderProduct} \n          soldOut={isSoldOut(orderProduct)}\n          quantityOptions={checkProductQuantity(orderProduct.product.quantity)}\n          currentUser={currentUser} \n          handleBanner={handleBanner}/>\n      </Grid.Column>\n    ))\n  }\n\n  if (emptyCart) {\n    cartBody = <h2 className=\"cart__text\">Your cart is empty</h2>\n  } else {\n    cartBody = displayOrders()\n  }\n\n  console.log(\"orders\", orders)\n\n    return (\n      <Container className=\"cart\">\n        <h1 className=\"cart__title\">Cart</h1>\n        <Divider/>\n        <Grid className=\"cart__grid\">\n          <Grid.Row columns={4}>\n            {cartBody}\n          </Grid.Row>\n        </Grid>\n        <Divider/>\n        <div className=\"cart__orderOverview\">\n          <h2>Total: {totalOrder}</h2>\n          <Button inverted color=\"orange\" onClick={handlePlaceOrder}>Place your order</Button>\n        </div>\n      </Container>\n    )\n}\n\nexport default withRouter(Cart);","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/loginForm/LoginForm.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/navbar/Navbar.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/signupForm/SignupForm.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/home/Home.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/inventory/Inventory.js",["99","100","101","102","103","104"],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/products/Products.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/dashboard/Dashboard.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/api/index.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/App.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/Orders.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/store/Products.js",["105"],"import { SET_PRODUCTS, ADD_PRODUCT, ADD_PRODUCT_FORM, UPDATE_PRODUCT_FORM, REMOVE_PRODUCT } from './type';\n\nconst defaultState = {\n  products: [],\n  newProducts: []\n  // newProducts: [{title: \"\", price: \"\", fileName: \"0-Goku.jpg\"}]\n}\n\nconst reducer = (state = defaultState, action) => {\n  switch(action.type) {\n    case SET_PRODUCTS:\n      return {\n        ...state, \n        products: [...action.payload]\n      }\n    case ADD_PRODUCT: \n    console.log(\"ADD_PRODUCT:\", action.payload)\n      return {\n        ...state,\n        products: [action.payload, ...state.products]\n      }\n    case REMOVE_PRODUCT:\n      const filteredProducts = state.products.filter(p => p.id !== action.payload.id)\n      return {\n        ...state,\n        products: [...filteredProducts]\n      }\n      case ADD_PRODUCT_FORM: \n      return {\n        ...state,\n        newProducts: [...state.newProducts, action.payload]\n      }\n    case UPDATE_PRODUCT_FORM:\n      const updatedData = state.newProducts.map(data => {\n        if (data.fileName === action.payload.fileName) {\n          return action.payload\n        }\n      })\n      const filteredData = state.newProducts.filter(data => data.fileName !== action.payload.fileName)\n      const newData = [...filteredData, updatedData]\n      return {\n        ...state,\n        newProducts: newData\n      }\n    default: \n      return state\n  }\n}\n\nexport default reducer; ","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/orderItem/OrderItem.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/hooks/useFormFields.js",["106"],"import { useState } from 'react';\n\nexport default initialState => {\n  const [ fields, setValues ] = useState(initialState)\n  return [\n    fields,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.name]: event.target.value\n      })\n    }\n  ]\n}","/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/homepageHeading/HomepageHeading.js",[],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/productForm/ProductForm.js",["107","108","109","110","111","112","113","114","115","116","117","118","119"],"/Users/marlonbraga/Desktop/chillshop/chillshop-frontend/src/components/cardProduct/CardProduct.js",["120"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal, Header, Grid, Card, Icon, Button, Dropdown } from 'semantic-ui-react'\nimport { deleteProduct, createOrder } from '../../api';\nimport { REMOVE_PRODUCT, SET_BANNER, ADD_ORDER, UPDATE_TOTAL_ORDER } from '../../store/type';\nimport ProductForm from '../productForm/ProductForm'\n\nimport './Styles.scss';\n\nconst CardProduct = ({ thisProduct, selected = false, soldOut = false, quantityOptions = 0, currentUser, handleBanner }) => {\n\n  let isAvailable = soldOut || selected ? true : false;\n  let cartButtonOptions = soldOut ? \"Sold out\" : selected ? \"Added to cart\" : <Icon name='shopping cart' />;\n  const [ openDelete, setOpenDelete ] = useState(false);\n  const [ openUpdate, setOpenUpdate ] = useState(false);\n  const [ notShopper, setNotShopper ] = useState(false);\n  const [ loader, setLoader ] = useState(false);\n  const [ quantity, setQuantity ] = useState(1);\n  const { seller } = thisProduct\n\n  const dispatch = useDispatch()\n  \n  useEffect(() => {\n    setNotShopper(seller.email !== currentUser.email)\n  }, [notShopper])\n\n  const chooseQuantity = (e, {value}) => {setQuantity(value)};\n\n  const addToCart = (item) => {\n    createOrder(item.id, quantity)\n    .then(newOrder => {\n      const { orderItem, orderTotal, confirmation } = newOrder;\n      handleBanner();\n      dispatch({ type: ADD_ORDER, payload: orderItem });\n      dispatch({ type: UPDATE_TOTAL_ORDER, payload: orderTotal });\n      dispatch({ type: SET_BANNER, payload: confirmation });\n    })\n  }\n\n  const handleDelete = () => {\n    setLoader(true)\n    deleteProduct(thisProduct.id, localStorage.token)\n    .then(data => {\n      const { product, confirmation } = data;\n      dispatch({ type: REMOVE_PRODUCT, payload: product })\n      dispatch({ type: SET_BANNER, payload: confirmation });\n      setTimeout(() => {\n        handleBanner()\n        setLoader(false)\n        setOpenDelete(false)\n      }, [1000])\n    })\n  }\n\n    return (\n      <Grid.Column className=\"cardItem\" id=\"cardContainer\">\n        <Card className=\"cardItem__card\">\n          <div  role=\"img\" \n                aria-label={thisProduct.title}\n                title={thisProduct.title}\n                className=\"cardItem__image\" \n                style={{backgroundImage: `url(${thisProduct.image_url})` }} />\n          <Card.Content>\n            <Card.Header>{thisProduct.title}</Card.Header>\n            <Card.Description>\n              Price: ${thisProduct.price}\n            </Card.Description>\n            <Card.Description>\n              Qty: {thisProduct.quantity}\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <div floated='left'>\n              <Icon name='user' />\n              {seller.first_name} {seller.last_name}\n            </div>\n            <div>\n            { \n              notShopper && \n              <>\n                <Dropdown \n                  name=\"quantity\"\n                  disabled={isAvailable}\n                  compact\n                  selection \n                  placeholder='Qty' \n                  options={quantityOptions} \n                  onChange={chooseQuantity}\n                />\n                <Button floated='right' color=\"blue\" disabled={isAvailable} icon onClick={() => addToCart(thisProduct)}>\n                  {cartButtonOptions}\n                </Button>\n              </>\n            }\n            </div>\n          </Card.Content>\n          {\n            currentUser && !notShopper && \n            <Card.Content textAlign='center' extra>\n              <Modal\n                closeIcon\n                size=\"mini\"\n                dimmer={\"inverted\"}\n                open={openDelete}\n                trigger={\n                  <Button inverted color=\"red\" icon>\n                    <Icon name='trash' />\n                  </Button>\n                }\n                onClose={() => setOpenDelete(false)}\n                onOpen={() => setOpenDelete(true)}\n              >\n                <Header icon='trash' content='Please confirm' />\n                <Modal.Content>\n                  <p>\n                    Are you sure you want to delete this product?\n                  </p>\n                </Modal.Content>\n                <Modal.Actions>\n                  {\n                  !loader && \n                  <Button color='red' onClick={() => setOpenDelete(false)}>\n                    <Icon name='remove' /> No\n                  </Button>\n                  }\n                  <Button color='green' loading={loader} onClick={handleDelete}>\n                    <Icon name='checkmark' /> Yes\n                  </Button>\n                </Modal.Actions>\n              </Modal>\n              <Modal\n                closeIcon\n                size=\"small\"\n                dimmer={\"inverted\"}\n                open={openUpdate}\n                trigger={\n                  <Button inverted color=\"green\" icon>\n                    <Icon name='edit' />\n                  </Button>\n                }\n                onClose={() => setOpenUpdate(false)}\n                onOpen={() => setOpenUpdate(true)}\n              >\n                <Header icon='edit' content='Update Product' />\n                <Modal.Content>\n                  <ProductForm showAction={false} product={thisProduct}/>\n                </Modal.Content>\n              </Modal>\n            </Card.Content>\n          }\n        </Card>\n      </Grid.Column>\n  )\n}\n\nexport default CardProduct;",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":14,"column":9,"nodeType":"127","messageId":"128","endLine":14,"endColumn":17},{"ruleId":"125","severity":1,"message":"129","line":27,"column":9,"nodeType":"127","messageId":"128","endLine":27,"endColumn":22},{"ruleId":"125","severity":1,"message":"130","line":4,"column":28,"nodeType":"127","messageId":"128","endLine":4,"endColumn":47},{"ruleId":"125","severity":1,"message":"131","line":16,"column":11,"nodeType":"127","messageId":"128","endLine":16,"endColumn":16},{"ruleId":"125","severity":1,"message":"132","line":16,"column":18,"nodeType":"127","messageId":"128","endLine":16,"endColumn":26},{"ruleId":"125","severity":1,"message":"133","line":19,"column":24,"nodeType":"127","messageId":"128","endLine":19,"endColumn":38},{"ruleId":"134","severity":1,"message":"135","line":57,"column":49,"nodeType":"136","messageId":"137","endLine":57,"endColumn":51},{"ruleId":"125","severity":1,"message":"138","line":94,"column":11,"nodeType":"127","messageId":"128","endLine":94,"endColumn":27},{"ruleId":"139","severity":1,"message":"140","line":34,"column":54,"nodeType":"141","messageId":"142","endLine":34,"endColumn":56},{"ruleId":"143","severity":1,"message":"144","line":3,"column":1,"nodeType":"145","endLine":14,"endColumn":2},{"ruleId":"125","severity":1,"message":"146","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":15},{"ruleId":"125","severity":1,"message":"147","line":3,"column":37,"nodeType":"127","messageId":"128","endLine":3,"endColumn":48},{"ruleId":"125","severity":1,"message":"148","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":21},{"ruleId":"125","severity":1,"message":"149","line":6,"column":23,"nodeType":"127","messageId":"128","endLine":6,"endColumn":33},{"ruleId":"125","severity":1,"message":"150","line":7,"column":10,"nodeType":"127","messageId":"128","endLine":7,"endColumn":20},{"ruleId":"125","severity":1,"message":"151","line":7,"column":22,"nodeType":"127","messageId":"128","endLine":7,"endColumn":35},{"ruleId":"125","severity":1,"message":"152","line":19,"column":9,"nodeType":"127","messageId":"128","endLine":19,"endColumn":17},{"ruleId":"125","severity":1,"message":"153","line":20,"column":24,"nodeType":"127","messageId":"128","endLine":20,"endColumn":38},{"ruleId":"125","severity":1,"message":"154","line":22,"column":21,"nodeType":"127","messageId":"128","endLine":22,"endColumn":32},{"ruleId":"125","severity":1,"message":"155","line":32,"column":5,"nodeType":"127","messageId":"128","endLine":32,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":43,"column":6,"nodeType":"158","endLine":43,"endColumn":40,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":57,"column":6,"nodeType":"158","endLine":57,"endColumn":8,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":63,"column":13,"nodeType":"164","endLine":63,"endColumn":76},{"ruleId":"156","severity":1,"message":"165","line":25,"column":6,"nodeType":"158","endLine":25,"endColumn":18,"suggestions":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar","'collectOrders' is assigned a value but never used.","'UPDATE_PRODUCT_FORM' is defined but never used.","'files' is assigned a value but never used.","'setFiles' is assigned a value but never used.","'setCollectData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'currentFormCount' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Image' is defined but never used.","'Placeholder' is defined but never used.","'ADD_PRODUCT' is defined but never used.","'SET_BANNER' is defined but never used.","'newProduct' is defined but never used.","'updateProduct' is defined but never used.","'dispatch' is assigned a value but never used.","'setImageLoader' is assigned a value but never used.","'setFileName' is assigned a value but never used.","'disableName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'file'. Either include it or remove the dependency array. If 'setPlaceholder' needs the current value of 'file', you can also switch to useReducer instead of useState and read 'file' in the reducer.","ArrayExpression",["169"],"React Hook useEffect has a missing dependency: 'sendData'. Either include it or remove the dependency array.",["170"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'currentUser.email' and 'seller.email'. Either include them or remove the dependency array. If 'setNotShopper' needs the current value of 'currentUser.email', you can also switch to useReducer instead of useState and read 'currentUser.email' in the reducer.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [file, imageLoader, product, showAction]",{"range":"178","text":"179"},"Update the dependencies array to be: [sendData]",{"range":"180","text":"181"},"Update the dependencies array to be: [currentUser.email, notShopper, seller.email]",{"range":"182","text":"183"},[1311,1345],"[file, imageLoader, product, showAction]",[1565,1567],"[sendData]",[1120,1132],"[currentUser.email, notShopper, seller.email]"]